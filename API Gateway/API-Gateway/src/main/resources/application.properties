
# server:
#   port: 9094
# spring:
#     application:
#         name: API-Gateway

#     cloud:
#         gateway:
#             routes:
#               - id: Quiz-Microservice
#                 uri: lb://Quiz-Microservice
#                 predicates:
#                   - Path=/quiz/**,/staffs/**
#               - id: message
#                 uri: lb://QUESTION-MICROSERVICE
#                 predicates:
#                   - Path=/question/**
#     main:
#         web-application-type: reactive



spring.application.name=API-Gateway
server.port=9094
spring.cloud.gateway.routes[0].id=Quiz-Microservice
spring.cloud.gateway.routes[0].uri=lb://Quiz-Microservice
spring.cloud.gateway.routes[0].predicates[0]=Path=/quiz/**

spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=Quiz-Microservice
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback


# spring.cloud.gateway.routes[1].id=QUESTION-MICROSERVICE
# spring.cloud.gateway.routes[1].predicates[1]=Path=/question/**
# spring.cloud.gateway.routes[1].uri=lb://QUESTION-MICROSERVICE

spring.cloud.gateway.routes[1].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.name=QUESTION-MICROSERVICE
spring.cloud.gateway.routes[1].filters[1].args.fallbackUri=forward:/fallback

spring.main.web-application-type=reactive

#Okta config

okta.oauth2.issuer=https://dev-01633307.okta.com/oauth2/default
okta.oauth2.audience=api://default
okta.oauth2.client-id=0oagqx28l6YwNz6Yx5d7
okta.oauth2.client-secret=KuktCATcQ-iaQmDjpAkMyozipTtUpMLHx7Broj3mCgwFdsZdNjkNLuM6lNOMjWyY

okta.oauth2.scopes=openid, profile, email, offline_access

eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# use Gateway Dependency do not use gateway-mvc



# run first eureka server then Api gateway
# use token to hit registered api on apiGateway