# spring.application.name=Quiz-Microservice

server.port=9091
spring.datasource.url=jdbc:postgresql://localhost:5432/Colllege_Database
spring.datasource.username=postgres
spring.datasource.password=96633
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

# eureka.instance.prefer-ip-address=true
# eureka.client.register-with-eureka=true
# eureka.client.fetch-registry=true


QuestionService.api.url=localhost:9093/question/
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect

# to register with eurekaclient
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

    # to make config client
# spring.config.import.optional.configserver=http://localhost:9095
# spring.cloud.config.uri=http://localhost:9095
# spring.config.import.configserver=http://localhost:8085
# spring.cloud.config.uri.import=http://localhost:9095
# either use below property or use bootstrap dependency as bootstrap becomes legacy so below property you can use

spring.config.import=configserver:http://localhost:9095
# to active config server of particular envrionment type
# spring.profiles.active=dev

# Okta config
okta.oauth2.issuer=https://dev-01633307.okta.com/oauth2/default
okta.oauth2.audience=api://default

# for client spring client secuity
security.oauth2.resourceserver.jwt.issuer-uri=https://dev-01633307.okta.com/oauth2/default
security.oauth2.client.registration.my-internal-client.provider=okta
security.oauth2.client.registration.my-internal-client.authorization-grant-type=client_credentials
security.oauth2.client.registration.my-internal-client.scope=internal
security.oauth2.client.registration.my-internal-client.client-id=0oagqx28l6YwNz6Yx5d7
security.oauth2.client.registration.my-internal-client.client-secret=KuktCATcQ-iaQmDjpAkMyozipTtUpMLHx7Broj3mCgwFdsZdNjkNLuM6lNOMjWyY
security.oauth2.provider.okta.issuer-uri=https://dev-01633307.okta.com/oauth2/default
